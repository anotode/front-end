angular.module('categoryService', [])

.factory('Category', function CategoryFactory($http, $q,  AuthToken) {
  var categories;
  
  return {
    all: function() {      
      var deferred = $q.defer();
      
      if(categories) {
        deferred.resolve(categories);
      } else {
        $http({method: 'GET', url: '/api/highlights/categories?token='+AuthToken.getToken()})
          .success(function(data) {
            categories = data;
            deferred.resolve(data);
          })
          .error(function(err) {
            deferred.reject(err)
          });
      }
      
      return deferred.promise;
    }
  };
});


.factory('AuthToken', function($window) {

	var authTokenFactory = {};

	authTokenFactory.getToken = function() {
		return $window.localStorage.getItem('token');
	}

	authTokenFactory.setToken = function(token) {

		if(token)
			$window.localStorage.setItem('token', token);
		else
			$window.localStorage.removeItem('token');

	}

	return authTokenFactory;

})


.factory('AuthInterceptor', function($q, $location, AuthToken) {

	var interceptorFactory = {};


	interceptorFactory.request = function(config) {

		var token = AuthToken.getToken();

		if(token) {

			config.headers['x-access-token'] = token;

		}

		return config;

	};

	
	return interceptorFactory;
})


.factory('socketio', function($rootScope) {

	var socket = io.connect();
	return {

		on: function(eventName, callback) {
			socket.on(eventName, function() {
				var args = arguments;
				$rootScope.$apply(function() {
					callback.apply(socket, args);
				});
			});
		},

		emit: function(eventName, data, callback) {
			socket.emit(eventName, data, function() {
				var args = arguments;
				$rootScope.apply(function() {
					if(callback) {
						callback.apply(socket, args);
					}
				});
			});
		}

	};

})


